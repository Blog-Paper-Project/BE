name: ci-cd-pipeline
on:
  pull_request:
    branches:
      - dev
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
      - name: create env file
          working-directory: ../BE
          run: |
          touch .env
          cat << EOF >> .env
          ${{ secrets.PAPER_SECRET }}
      - name: npm install
        working-directory: ../BE
        run: |
          npm install 
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test /dist/specs/user.spec.js

  build-image:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_NAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_NAME }}/paper:test
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  cd-pipeline:
    needs: build-image
    name: continuos deploy
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /home/ubuntu/
            docker rm -f $(docker ps -aq) && docker image rm -f $(docker image ls -q)
            docker pull ${{ secrets.DOCKER_NAME }}/paper:test && docker run --env-file /home/ubuntu/.env --name server1 -d -i -p 8000:8000 ${{ secrets.DOCKER_NAME }}/paper:test && docker run --env-file /home/ubuntu/.env --name server2 -d -i -p 8001:8000 ${{ secrets.DOCKER_NAME }}/paper:test
